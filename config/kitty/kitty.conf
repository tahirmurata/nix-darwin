# vim:fileencoding=utf-8:foldmethod=marker

# Catppuccin-Mocha
include current-theme.conf

font_size 13
font_family      family="JetBrains Mono"
bold_font        auto
italic_font      auto
bold_italic_font auto

mouse_hide_wait -1

cursor_shape block
cursor_blink_interval 0


# Fish
shell /run/current-system/sw/bin/fish --login --interactive
shell_integration no-cursor

# Tab style
tab_bar_min_tabs            1
tab_bar_edge                bottom
tab_bar_style               powerline
tab_powerline_style         slanted
tab_title_template          {title}{' :{}:'.format(num_windows) if num_windows > 1 else ''}

# Split layout

enabled_layouts splits:split_axis=horizontal

# Create a new window splitting the space used by the existing one so that
# the two windows are placed one above the other
map f5 launch --cwd=current --location=hsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side
map f6 launch --cwd=current --location=vsplit

# Create a new window splitting the space used by the existing one so that
# the two windows are placed side by side if the existing window is wide or
# one above the other if the existing window is tall.
map f4 launch --cwd=current --location=split

# Rotate the current split, changing its split axis from vertical to
# horizontal or vice versa
map f7 layout_action rotate

# Move the active window in the indicated direction
map shift+up move_window up
map shift+left move_window left
map shift+right move_window right
map shift+down move_window down

# Move the active window to the indicated screen edge
map ctrl+shift+up layout_action move_to_screen_edge top
map ctrl+shift+left layout_action move_to_screen_edge left
map ctrl+shift+right layout_action move_to_screen_edge right
map ctrl+shift+down layout_action move_to_screen_edge bottom

# Switch focus to the neighboring window in the indicated direction
map ctrl+left neighboring_window left
map ctrl+right neighboring_window right
map ctrl+up neighboring_window up
map ctrl+down neighboring_window down

# Set the bias of the split containing the currently focused window. The
# currently focused window will take up the specified percent of its parent
# window's size.
map ctrl+. layout_action bias 80
